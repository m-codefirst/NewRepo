"use strict"; var tinymce = tinymce || {}, iconClasses = [['Afbeelding downloaden', 'vf-icon-VF_download_rgb'], ['Contact', 'vf-icon-VF_call_rgb'], ['Contract', 'vf-icon-VF_contract_details_rgb'], ['Kalender', 'vf-icon-VF_calendar_rgb'], ['PDF downloaden', 'vf-icon-VF_download_pdf_rgb'], ['Rekeningen', 'vf-icon-VF_invoices_rgb'], ['Vraagteken', 'vf-icon-VF_help_rgb'], ['Zoeken', 'vf-icon-VF_search_rgb']]; tinymce.PluginManager.add("iconlist", function (e, n) { var i = []; function t(e) { return null === e || null !== e.match(/^ *$/) } tinymce.each(iconClasses, function (n) { i.push({ text: n[0], icon: " " + n[1], classes: " " + n[1], onclick: function () { var i, c = tinyMCE.activeEditor.selection.getNode().innerHTML; tinyMCE.activeEditor.selection.getNode().className.includes(n[1]) && !t(c) ? tinyMCE.activeEditor.selection.getNode().parentElement.innerHTML = c : void 0 === c || t(c) || c.includes("<li>") || "I" === tinyMCE.activeEditor.selection.getNode().nodeName || "I" === e.selection.getNode().firstChild.nodeName || ("LI" === (i = e.selection.getNode()).nodeName && (i.parentNode.className = "vf-list vf-list--icon"), e.selection.getNode().innerHTML = "<i class='" + n[1] + " vf-icon-small'></i>" + c) } }) }), e.addButton("iconlist", { type: "menubutton", text: "Icon List", icon: "code", valid_children: "+body[i]", menu: i }) });