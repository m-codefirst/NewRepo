@using EPiServer.Editor
@using EPiServer.Web.Mvc.Html
@using TRM.Web.Constants
@using TRM.Web.Models.Layouts
@using TRM.Web.Extentions
@using TRM.Shared.Extensions
@model Hephaestus.CMS.ViewModels.IPageViewModel<TRM.Web.Models.Pages.StandardPage, Hephaestus.CMS.ViewModels.ILayoutModel>
@{
    var myLayout = Model.Layout as TrmLayoutModel;
    if (myLayout == null)
    {
        throw new InvalidCastException(StringConstants.Layout.InvalidLayout);
    }

    @Html.FullRefreshPropertiesMetaData(new[] { "ThreeContentAreas" })
    var mainClass = Model.CurrentPage.ShowMyLeftMenu ? "col-xs-12 col-md-9 col-md-push-3" : "container";
}
<div class="contentArea">
    <div class="row" @Html.EditAttributes(m => m.CurrentPage.ThreeContentAreas)>
        @Html.DisplayFor(m => m.CurrentPage.ThreeContentAreas.TopContent)
    </div>
</div>

@if (!myLayout.HideSiteBreadcrumb)
{
    Html.RenderPartial("_Breadcrumb", myLayout.Breadcrumb);
}

@if (myLayout.HasMessage)
{
    Html.RenderPartial("_MessageBox", myLayout.Message);
}
@{
    var menuLabel = Html.TranslateFallback(StringResources.LeftMenuMobileText, StringConstants.TranslationFallback.Menu);

    if (!string.IsNullOrWhiteSpace(Model.CurrentPage.MenuButtonTextXs))
    {
        menuLabel = Model.CurrentPage.MenuButtonTextXs;
    }
}
<div class="container">
    @if (Model.CurrentPage.FullWidthPageHeading)
    {
        @Html.Partial("_PageHeader", myLayout)
    }
    <div class="row">
        <main class="@mainClass" id="content">
            @if (!Model.CurrentPage.FullWidthPageHeading)
            {
                @Html.Partial("_PageHeader", myLayout)
            }
            @if (Model.CurrentPage.ShowMyLeftMenu)
            {<div class="row">
                    <div class="col-sm-4 hidden-md hidden-lg">
                        <a class="btn btn-default btn-block sidenav-trigger mb-2x" data-target="#pageMenu">@menuLabel</a>
                    </div>
                </div>
            }
            @if ((Model.CurrentPage.MainBody != null && !Model.CurrentPage.MainBody.IsEmpty) || PageEditing.PageIsInEditMode)
            {
                <div class="xhtmlArea clear" @Html.EditAttributes(m => m.CurrentPage.MainBody)>

                    @{ var content = Html.ParseXhtmlString(Model.CurrentPage.MainBody); }
                    @Html.DisplayFor(m => content)

                </div>
            }
            <div class="contentArea" @Html.EditAttributes(m => m.CurrentPage.ThreeContentAreas)>
                <div class="row">
                    @Html.DisplayFor(m => m.CurrentPage.ThreeContentAreas.MiddleContent)
                    @if (Model.CurrentPage is TRM.Web.Models.Pages.ArticlePage)
                    {
                        var commentModel = ((TRM.Web.Models.Pages.ArticlePage)Model.CurrentPage).LoadComments(!Request.IsAuthenticated);
                        if (null != commentModel)
                        {
                            @Html.Partial("ArticleCommentPatrial", commentModel)
                        }
                    }
                </div>
            </div>

        </main>
        @if (Model.CurrentPage.ShowMyLeftMenu)
        {
            <aside class="col-xs-12 col-sm-3 col-sm-pull-9">
                <div class="row">
                    @{
                        if (Model.CurrentPage.ShowManualLeftNavigation)
                        {
                            Html.RenderPartial("_ManualLeftMenu", myLayout);
                        }

                        if (Model.CurrentPage.ShowAutomaticLeftNavigation)
                        {
                            Html.RenderPartial("_AutomaticLeftMenu", myLayout);
                        }
                    }
                </div>
                <div class="row">

                    @Html.PropertyFor(m => m.CurrentPage.BottomNavContentArea)


                </div>
            </aside>
        }
    </div>
</div>

<div class="contentArea" @Html.EditAttributes(m => m.CurrentPage.ThreeContentAreas)>
    <div class="row">
        @Html.DisplayFor(m => m.CurrentPage.ThreeContentAreas.BottomContent)
    </div>
</div>
