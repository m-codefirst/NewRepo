
@using EPiServer.Core
@using Hephaestus.ContentTypes.Business.Constants
@using Hephaestus.ContentTypes.Business.Extensions
@using TRM.Shared.Extensions
@model TRM.Web.Models.Blocks.EnhancedCarouselSlideBlock

<div class="block carouselItem col-xs-12 @Model.BackgroundImageAlignment.DescriptionAttr() @Model.ForeColour.DescriptionAttr() @Model.BackgroundColour.DescriptionAttr()">

    @if (Model.BackgroundImage != null && !ContentReference.IsNullOrEmpty(Model.BackgroundImage.LgImage))
    {
        <div class="banner-bg property">
            @Html.PropertyFor(a => a.BackgroundImage)
        </div>
    }

    <div class="block-container">
        <div class="blockContent @Model.ContentPosition.DescriptionAttr()">
            <div class="property overlay @(string.IsNullOrWhiteSpace(Model.OverwritePadding) ? Model.Padding.DescriptionAttr() : Model.OverwritePadding) ">
                <h3 class="heading">@Html.PropertyFor(m => m.Heading)</h3>

                <div class="xhtml @(Model.HideContentOnXs ? StringConstants.ViewportHiddenClasses.HiddenXs : string.Empty)  @(Model.HideContentOnSm ? StringConstants.ViewportHiddenClasses.HiddenSm : string.Empty)">
                    @if (Model.Content != null)
                    {
                        @{ var content = Html.ParseXhtmlString(Model.Content); }
                        @Html.DisplayFor(m => content)
                    }
                </div>
                @if (Model.LinkUrl != null && !Model.LinkUrl.IsEmpty())
                {
                    <a href="@Url.ContentUrlExtension(Model.LinkUrl)" class="btn-arrow" title="@Model.LinkText">@Html.DisplayFor(m => m.LinkText)</a>
                }

            </div>
        </div>
    </div>
</div>