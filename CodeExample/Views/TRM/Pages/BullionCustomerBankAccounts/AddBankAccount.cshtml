@using EPiServer.Editor
@using TRM.Web.Constants
@using TRM.Web.Models.Layouts
@using TRM.Web.Extentions
@using EPiServer.Web
@using TRM.Shared.Extensions
@model Hephaestus.CMS.ViewModels.IPageViewModel<TRM.Web.Models.Pages.Bullion.BullionCustomerBankAccountPage, Hephaestus.CMS.ViewModels.ILayoutModel, TRM.Web.Models.ViewModels.Bullion.CustomerBankAccount.AddOrEditBankAccountViewModel>
@{
    var myLayout = Model.Layout as TrmLayoutModel;
    if (myLayout == null)
    {
        throw new InvalidCastException(StringConstants.Layout.InvalidLayout);
    }

    @Html.FullRefreshPropertiesMetaData(new[] { "ThreeContentAreas" })
    var mainClass = Model.CurrentPage.ShowMyLeftMenu ? "col-xs-12 col-md-9 col-md-push-3" : "container";
}

@functions
{
    public string GetFeedbackClass(string fieldName, string classes = null)
    {
        var fieldKey = string.Format("viewModel.{0}", fieldName);
        if (ViewData.ModelState[fieldKey] != null && ViewData.ModelState[fieldKey].Errors.Any())
        {
            return string.IsNullOrEmpty(classes) ? "has-feedback ValidationFail" : classes;
        }
        return string.Empty;
    }
}

@helper ErrorMessage(string fieldName)
{
    var fieldKey = string.Format("viewModel.{0}", fieldName);
    if (ViewData.ModelState[fieldKey] != null && ViewData.ModelState[fieldKey].Errors.Any())
    {
        <span id="bull-email__helpBlock2" class="help-block">
            @Html.ValidationMessage(fieldKey);
        </span>
        <span class="trmi form-control-feedback" aria-hidden="true"></span>
    }
}

@Html.PropertyFor(m => m.CurrentPage.MainBody)

<div class="contentArea">
    <div class="row" @Html.EditAttributes(m => m.CurrentPage.ThreeContentAreas)>
        @Html.DisplayFor(m => m.CurrentPage.ThreeContentAreas.TopContent)
    </div>
</div>

@if (!myLayout.HideSiteBreadcrumb)
{
    <div class="container">
        @Html.Partial("_Breadcrumb", myLayout.Breadcrumb)
    </div>
}

@if (myLayout.HasMessage)
{
    Html.RenderPartial("_MessageBox", myLayout.Message);
}
@{
    var menuLabel = Html.TranslateFallback(StringResources.LeftMenuMobileText, StringConstants.TranslationFallback.Menu);

    if (!string.IsNullOrWhiteSpace(Model.CurrentPage.MenuButtonTextXs))
    {
        menuLabel = Model.CurrentPage.MenuButtonTextXs;
    }
}
<div class="container linked-bank-accounts">
    @if (Model.CurrentPage.FullWidthPageHeading)
    {
        @Html.Partial("_PageHeader", myLayout)
    }
    <main class="@mainClass" id="content">
        @if (!Model.CurrentPage.FullWidthPageHeading)
        {
            @Html.Partial("_PageHeader", myLayout)
        }
        @if (Model.CurrentPage.ShowMyLeftMenu)
        {<div class="row">
                <div class="col-sm-4 hidden-md hidden-lg">
                    <a class="btn btn-default btn-block sidenav-trigger mb-2x" data-target="#pageMenu">@menuLabel</a>
                </div>
            </div>
        }
        @if ((Model.CurrentPage.MainBody != null && !Model.CurrentPage.MainBody.IsEmpty) || PageEditing.PageIsInEditMode)
        {
            <div class="xhtmlArea clear" @Html.EditAttributes(m => m.CurrentPage.MainBody)>
                @{ var content = Html.ParseXhtmlString(Model.CurrentPage.MainBody); }
                @Html.DisplayFor(m => content)
            </div>
        }
        <div class="contentArea" @Html.EditAttributes(m => m.CurrentPage.ThreeContentAreas)>
            <div class="row">
                @Html.DisplayFor(m => m.CurrentPage.ThreeContentAreas.MiddleContent)
            </div>
        </div>

        <div class="panel panel-default panel-secondary">
            <div class="panel-body">
                <div class="row">
                    <div class="col-xs-12 mb-2x mb-xs-0x">
                        <h2 class="mt-0">@Html.PropertyFor(x => x.CurrentPage.FormHeaderText)</h2>
                        <p>@Html.Raw(Model.CurrentPage.FormIntroText)</p>
                    </div>
                </div>
                @if (Model.ViewModel.IsEditing)
                {
                    using (Html.BeginForm("Edit", null, new { bankAccountId = Model.ViewModel.CustomerBankAccountId }, FormMethod.Post, new { @class = "form-horizontal" }))
                    {
                        ViewData["IsEditBankAccountView"] = true;
                        @Html.PartialFor(x => x, "_AddBankAccount")
                    }
                }
                else
                {
                    using (Html.BeginForm("AddBankAccount", null, FormMethod.Post, new { @class = "form-horizontal" }))
                    {
                        ViewData["IsEditBankAccountView"] = false;
                        @Html.PartialFor(x => x, "_AddBankAccount")
                    }
                }
            </div>
        </div>
    </main>
    @if (Model.CurrentPage.ShowMyLeftMenu)
    {
        <aside class="col-xs-12 col-sm-3 col-sm-pull-9">
            <div class="row">
                @{
                    if (Model.CurrentPage.ShowManualLeftNavigation)
                    {
                        Html.RenderPartial("_ManualLeftMenu", myLayout);
                    }

                    if (Model.CurrentPage.ShowAutomaticLeftNavigation)
                    {
                        Html.RenderPartial("_AutomaticLeftMenu", myLayout);
                    }
                }
            </div>
            <div class="row">
                @Html.PropertyFor(m => m.CurrentPage.BottomNavContentArea)
            </div>
        </aside>
    }
</div>

<div class="contentArea" @Html.EditAttributes(m => m.CurrentPage.ThreeContentAreas)>
    <div class="row">
        @Html.DisplayFor(m => m.CurrentPage.ThreeContentAreas.BottomContent)
    </div>
</div>

@{
    EPiServer.Framework.Web.Resources.ClientResources.RequireScript("/bundles/" + SiteDefinition.Current.Name + "bullionAddBankAccount").AtFooter();
}