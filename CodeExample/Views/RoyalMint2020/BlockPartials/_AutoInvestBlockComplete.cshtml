@model TRM.Web.Models.ViewModels.AutoInvest.AutoInvestBlockCompleteViewModel
@using Newtonsoft.Json
@using TRM.Web.Models.ViewModels
@using TRM.Web.Models.ViewModels.AutoInvest
@using EPiServer.Business.Commerce.Payment.Mastercard.Mastercard
@using TRM.Web.Helpers
@using TRM.Web.Extentions

@{ var progressBarViewModel = new ProgressBarViewModel
    {
        Steps = new List<ProgressBarItem> {
            new ProgressBarItem
            {
                Heading = Model.CurrentBlock.InvestmentStepperTitle,
                Number = "1",
                IsComplete= true,
            },
            new ProgressBarItem
            {
                Heading = Model.CurrentBlock.PaymentDateStepperTitle,
                Number = "2",
                IsComplete= true,
            },
            new ProgressBarItem
            {
                Heading = Model.CurrentBlock.CompleteStepperTitle,
                IsCurrent = true,
                Number = "3",
            }
        }
    };

    var paymentMethodParameters = Model.CurrentPaymentMethod.GetPaymentMethodParameterRows();

    var sessionJsUrl = paymentMethodParameters.Any(x => x.Parameter == MastercardPaymentGateway.SessionJsUrl) ?
paymentMethodParameters.Single(x => x.Parameter == MastercardPaymentGateway.SessionJsUrl).Value : string.Empty;

    var amexSessionJsUrl = paymentMethodParameters.Any(x => x.Parameter == MastercardPaymentGateway.AmexSessionJsUrl) ?
        paymentMethodParameters.Single(x => x.Parameter == MastercardPaymentGateway.AmexSessionJsUrl).Value : string.Empty;

    var countryCodes = paymentMethodParameters.Any(x => x.Parameter == MastercardPaymentGateway.AmexCountryCodesParameter) ?
        paymentMethodParameters.Single(x => x.Parameter == MastercardPaymentGateway.AmexCountryCodesParameter).Value.Split(',') : null;

    var countryCodesJsArray = string.Empty;
    if (countryCodes != null && countryCodes.Any())
    {
        countryCodesJsArray = string.Join(",", countryCodes.Select(x => string.Format("'{0}'", x.Trim())));
    }

  
    var countryHelper = new CountryHelper();
    var countryList = countryHelper.GetCountries().CastToDictionary();

    var addFunds = new
    {
        makePaymentButtonText = Html.TranslateFallback(TRM.Web.Constants.StringResources.AddFunds, "Add funds"),
        amountTitle = Html.TranslateFallback(TRM.Web.Constants.StringResources.Amount, "Amount"),
        completedLink = "",
        investmentOrderTotalLabel = Html.TranslateFallback(TRM.Web.Constants.StringResources.InvestmentOrderTotalLabel, "Investment Order Total"),
        currentWalletBallanceLabel = Html.TranslateFallback(TRM.Web.Constants.StringResources.CurrentWalletBallanceLabel, "Current Wallet Balance"),
        recomendedTopUpLabel = Html.TranslateFallback(TRM.Web.Constants.StringResources.RecomendedTopUpLabel, "Recommended Top Up"),
        creditCardErrorMessage = Html.TranslateFallback(TRM.Shared.Constants.StringResources.CreditCardErrorMessage, "Please provide credit card details"),
        currencySymbol = Model.CurrencySymbol,
        investmentOrderTotal = Model.InvestmentOrderTotal,
        currentWalletBallance = Model.CurrentWalletBalance,
        invalidAmountOfFunds = Html.TranslateFallback(TRM.Shared.Constants.StringResources.InvalidAmountOfFunds, "Invalid amount."),
        isAuthenticated = Request.IsAuthenticated,
        paymentSuccessfullHeader = Html.TranslateFallback(TRM.Web.Constants.StringResources.BullionAddFundsPaymentSuccessHeader, "Payment Sucessful"),
        paymentSuccessfullDescription = Html.TranslateFallback(TRM.Web.Constants.StringResources.BullionPaymentSuccessfully, "Your payment has been received, Thanks!"),
        orderNumber = Html.TranslateFallback(TRM.Web.Constants.StringResources.BullionAddFundsOrderNumber, "Order Number:"),
        kyc = new
        {
            modalTitle = Html.TranslateFallback(TRM.Web.Constants.StringResources.AmlReapplicationModalTitle, "KYC"),
            title = Html.TranslateFallback(TRM.Web.Constants.StringResources.AmlReapplicationTitle, "Your Bullion Details"),
            firstName = Html.TranslateFallback(TRM.Web.Constants.StringResources.AmlReapplicationFirstName, "First Name"),
            firstNameRequired = Html.TranslateFallback(TRM.Web.Constants.StringResources.AmlReapplicationErrFirstNameRequired, "Your first name is required!"),
            middleName = Html.TranslateFallback(TRM.Web.Constants.StringResources.AmlReapplicationMiddleName, "Middle Name"),
            lastName = Html.TranslateFallback(TRM.Web.Constants.StringResources.AmlReapplicationLastName, "Last Name"),
            lastNameRequired = Html.TranslateFallback(TRM.Web.Constants.StringResources.AmlReapplicationErrLastNameRequired, "Your last name is required!"),
            gender = Html.TranslateFallback(TRM.Web.Constants.StringResources.AmlReapplicationGender, "Gender"),
            genderRequired = Html.TranslateFallback(TRM.Web.Constants.StringResources.AmlReapplicationErrGenderRequired, "Your gender is required!"),
            genderList = TRM.Web.Extentions.EnumExtensions.GetGenderList(),
            birth = Html.TranslateFallback(TRM.Web.Constants.StringResources.AmlReapplicationDateOfBirth, "Date of Birth"),
            birthRequired = Html.TranslateFallback(TRM.Web.Constants.StringResources.AmlReapplicationErrDateOfBirthRequired, "Your date of birth is required!"),
            addressTitle = Html.TranslateFallback(TRM.Web.Constants.StringResources.AmlReapplicationAddressTitle, "Your Bullion Address"),
            addressFirstLine = Html.TranslateFallback(TRM.Web.Constants.StringResources.AmlReapplicationAddressFirstLineLabel, "First Line"),
            addressSecondLine = Html.TranslateFallback(TRM.Web.Constants.StringResources.AmlReapplicationAddressSecondLineLabel, "Second Line"),
            city = Html.TranslateFallback(TRM.Web.Constants.StringResources.AmlReapplicationAddressCityLabel, "City"),
            state = Html.TranslateFallback(TRM.Web.Constants.StringResources.AmlReapplicationAddressStateLabel, "State/County"),
            country = Html.TranslateFallback(TRM.Web.Constants.StringResources.AmlReapplicationAddressCountryLabel, "Country"),
            postcode = Html.TranslateFallback(TRM.Web.Constants.StringResources.AmlReapplicationAddressPostcodeLabel, "Postal Code"),
            line1Required = Html.TranslateFallback(TRM.Web.Constants.StringResources.AmlReapplicationErrFirstAddressLineRequired, "Your first line of address is required!"),
            line1MaxLength = string.Format(Html.TranslateFallback(TRM.Web.Constants.StringResources.AddressLineMaxlengthError, "Address cannot be longer than {0} characters"), 80),
            line2MaxLength = string.Format(Html.TranslateFallback(TRM.Web.Constants.StringResources.AddressLineMaxlengthError, "Address cannot be longer than {0} characters"), 80),
            countryRequired = Html.TranslateFallback(TRM.Web.Constants.StringResources.AmlReapplicationErrCountryRequired, "Your country is required!"),
            postcodeRequired = Html.TranslateFallback(TRM.Web.Constants.StringResources.ErrorPostCode, "Postal Code is required"),
            postcodeMaxLength = string.Format(Html.TranslateFallback(TRM.Web.Constants.StringResources.MaxlengthError, "Postal Code is over {0} signs"), 11),
            postcodeInvalid = Html.TranslateFallback(TRM.Web.Constants.StringResources.ErrorPostCodeInvalid, "Postal Code is invalid"),
            cityRequired = Html.TranslateFallback(TRM.Web.Constants.StringResources.AmlReapplicationErrCityRequired, "Your city is required!"),
            cityMaxLength = string.Format(Html.TranslateFallback(TRM.Web.Constants.StringResources.CityMaxlengthError, "City cannot be longer than {0} characters"), 64),
            countyMaxLength = string.Format(Html.TranslateFallback(TRM.Web.Constants.StringResources.CountyMaxlengthError, "County cannot be longer than {0} characters"), 64),
            countryList = countryList,
            button = Html.TranslateFallback(TRM.Web.Constants.StringResources.AmlReapplicationButtonText, "Re-Apply for Kyc"),
        }
    };

    var viewModel = new
    {
        texts = new
        {
            edit = @Html.TranslateFallback(TRM.Web.Constants.StringResources.Edit, "Edit"),
            addFunds = @Html.TranslateFallback(TRM.Web.Constants.StringResources.AddFunds, "Add funds"),
            totalMonthlyInvestmentHeading = @Html.TranslateFallback(TRM.Web.Constants.StringResources.AutoInvestBlockCompleteStepTotalMonthlyInvestmentHeading, "Your total monthly investment is..."),
            thisTransactionWillTakePlaceHeading = @Html.TranslateFallback(TRM.Web.Constants.StringResources.AutoInvestBlockCompleteStepThisTransactionWillTakePlaceHeading, "This transaction will take place"),
            addingFundsHeading = @Html.TranslateFallback(TRM.Web.Constants.StringResources.AutoInvestBlockCompleteStepAddingFundsHeading, "Adding funds to your wallet"),
            addingFundsDescription = @Html.TranslateFallback(TRM.Web.Constants.StringResources.AutoInvestBlockCompleteStepAddingFundsDescription, "By adding funds to your wallet you can enjoy investing in digital precious metals within seconds."),
            perMonth = @Html.TranslateFallback(TRM.Web.Constants.StringResources.AutoInvestBlockCompleteStepPerMonthText, "per month"),
            specifyAmountLabel = @Html.TranslateFallback(TRM.Web.Constants.StringResources.SpecifyAmountLabel, "Specify amount"),
            nextTransaction = @Html.TranslateFallback(TRM.Web.Constants.StringResources.AutoInvestBlockCompleteStepYourNextTransactionWillTakePlaceOn, "Your next transaction will take place on the"),
            paymentOnWeekednMessage = @Html.TranslateFallback(TRM.Web.Constants.StringResources.AutoInvestBlockCompleteStepPaymentOnWeekend, "If your preferred payment date should fall on a weekend or national bank holiday within particular month of the year, the transaction for the payment will take place the following working day."),
            selectYourPaymentMethod = @Html.TranslateFallback(TRM.Web.Constants.StringResources.AutoInvestBlockCompleteStepSelectPaymentMethod, "select your payment method"),
            bankTransferMessage = @Html.TranslateFallback(TRM.Web.Constants.StringResources.AutoInvestBlockCompleteStepBankTransfer, "Please ensure to use your exact beneﬁciary reference, failure to do so may cause your funds to be lost.")
        },
        initialData = new
        {
            investmentDay = Model.InvestmentDay,
            products = Model.Products,
            monthlyInvestmentAmount = Model.MonthlyInvestmentAmount,
            currencySymbol = Model.CurrencySymbol

        },
        addFunds = addFunds,
        actionToEditAmounts = AutoInvestAction.Default,
        actionToEditDay = AutoInvestAction.RenderPaymentDate,
        actionUrl = @Request.RawUrl
    };
}

<script type="text/javascript">
    var globals = globals || {};
        globals.paymentMethodParameters = '';
        globals.sessionJsUrl = '@sessionJsUrl';
        globals.amexSessionJsUrl = '@amexSessionJsUrl';
        globals.countryCodes = '@countryCodes';
        globals.countryCodesJsArray = '@countryCodesJsArray';
        globals.paymentMethodId = '@Model.CurrentPaymentMethod.PaymentMethodId'
        globals.chooseACard = '@Html.TranslateFallback(TRM.Shared.Constants.StringResources.MastercardChooseACard, "Choose a card")';
        globals.allowSavedCards = 'false';
        globals.expiredMessage = '';
        globals.cardEnding = '@Html.TranslateFallback(TRM.Shared.Constants.StringResources.MastercardEnding, "Ending")';
        globals.cardRemove = '@Html.TranslateFallback(TRM.Shared.Constants.StringResources.MastercardRemoveCard, "Remove")';
        globals.inputName = '@TRM.Shared.Constants.StringConstants.Payments.SelectedCard';
        globals.newCard =   '@Html.TranslateFallback(TRM.Shared.Constants.StringResources.MastercardAddFundsManually, "Add funds manually")';
        globals.newCardSubtitle = '@Html.TranslateFallback(TRM.Shared.Constants.StringResources.MastercardAddFundsManuallyDescription, "(By selecting this option you will have to add funds to your account manually)")';
        globals.newAmexCard = '@Html.TranslateFallback(TRM.Shared.Constants.StringResources.MastercardNewAmexCard, "New Amex Card")';
        globals.cardNumber = '@Html.TranslateFallback(TRM.Shared.Constants.StringResources.MastercardCardNumber, "Card Number")';
        globals.endDate = '@Html.TranslateFallback(TRM.Shared.Constants.StringResources.MastercardEndDate, "End date")';
        globals.monthPlaceholder = '@Html.TranslateFallback(TRM.Shared.Constants.StringResources.MastercardMonthPlaceholder, "MM")';
        globals.yearPlaceholder = '@Html.TranslateFallback(TRM.Shared.Constants.StringResources.MastercardYearPlaceholder, "YYYY")';
        globals.name = '@Html.TranslateFallback(TRM.Shared.Constants.StringResources.MastercardNameOnCard, "Name on Card")';
        globals.nameSuffix = '@Html.TranslateFallback(TRM.Shared.Constants.StringResources.MastercardNameOnCardSuffix, "(Exactly as it appears on the card)")';
        globals.namePlaceholder = '@Html.TranslateFallback(TRM.Shared.Constants.StringResources.MastercardNameOnCardPlaceholder, "Name on Card")';
        globals.cvc = '@Html.TranslateFallback(TRM.Shared.Constants.StringResources.MastercardCcvNumber, "CCV Number")';
        globals.cvcHelp4Digits = '@Html.TranslateFallback(TRM.Shared.Constants.StringResources.MastercardCcvHelpMessageAmex, "Last 4 digits on the back of the card")';
        globals.cvcHelp3Digits = '@Html.TranslateFallback(TRM.Shared.Constants.StringResources.MastercardCcvHelpMessage, "Last 3 digits on the back of the card")';
        globals.saveCard = '@Html.TranslateFallback(TRM.Shared.Constants.StringResources.MastercardSaveCard, "Save card for future use?")';
        globals.bankTransfer = {
            bankName: '@Model.BankAccountDetail.BankName',
            accountName: '@Model.BankAccountDetail.AccountName',
            sortCode: '@Model.BankAccountDetail.SortCode',
            bankAccountNo: '@Model.BankAccountDetail.BankAccountNo',
            beneficiaryReference: '@Model.BankAccountDetail.BeneficiaryReference',
            ibanNo: '@Model.BankAccountDetail.IbanNo',
            swiftCode: '@Model.BankAccountDetail.SwiftCode',
            accordion2CollapseAsDefault: true,
            accordionTitle2: '@Html.TranslateFallback(TRM.Web.Constants.StringResources.BankTransferAccordionTitle, "Bank transfer")',
            fundWithBankTransferDescription: '@Html.TranslateFallback(TRM.Web.Constants.StringResources.BankTransferFundWithBankTransferDescription, "When making a bank transfer, please use the details below including the Beneﬁciary Reference Code below as your transaction reference in order to match the funds to your account.")',
            transferNotAvailable: '@Html.TranslateFallback(TRM.Web.Constants.StringResources.BankTransferNotAvaliable, "You can deposit by card but not by bank transfer.")',
            bankNameTitle: '@Html.TranslateFallback(TRM.Web.Constants.StringResources.BankTransferDetailsBankNameTitle, "Bank name")',
            accountNameTitle: '@Html.TranslateFallback(TRM.Web.Constants.StringResources.BankTransferDetailsAccountNameTitle, "Account name")',
            sortCodeTitle: '@Html.TranslateFallback(TRM.Web.Constants.StringResources.BankTransferDetailsSortCodeTitle, "Sort code")',
            bankAccountNoTitle: '@Html.TranslateFallback(TRM.Web.Constants.StringResources.BankTransferDetailsBankAccountNoTitle, "Bank account No")',
            beneficiaryReferenceTitle: '@Html.TranslateFallback(TRM.Web.Constants.StringResources.BankTransferDetailsBeneficiaryReferenceTitle, "Beneficiary Reference")',
            beneficiaryReferenceTooltip: '@Html.TranslateFallback(TRM.Web.Constants.StringResources.BankTransferDetailsBeneficiaryReferenceTooltip, "We accept Visa, Mastercard, American Express.")',
            additionalInformationSubHeadingTitle: '@Html.TranslateFallback(TRM.Web.Constants.StringResources.BankTransferDetailsAdditionalInformationSubHeadingTitle, "Additional information for International customers")',
            additionalInformationSubHeading: '@Html.TranslateFallback(TRM.Web.Constants.StringResources.BankTransferDetailsAdditionalInformationSubHeading, "For some International banks you may also be asked to provide the following information:")',
            ibanNoTitle: '@Html.TranslateFallback(TRM.Web.Constants.StringResources.BankTransferDetailsIbanNoTitle, "IBAN No.")',
            swiftCodeTitle: '@Html.TranslateFallback(TRM.Web.Constants.StringResources.BankTransferDetailsSwiftCodeTitle, "SWIFT code")',
            showDetails: true,
            showIban: true,
            showSwiftCode: true,
            showTransfer: true
        };
</script>

<!-- Step bar -->
@{ Html.RenderPartial("RoyalMint2020/_ProgressBar", progressBarViewModel); }

<div data-module="monthly-investment-complete" data-settings="@JsonConvert.SerializeObject(viewModel)"></div>