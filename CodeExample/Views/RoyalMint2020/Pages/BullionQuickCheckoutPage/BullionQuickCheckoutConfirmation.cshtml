@using Hephaestus.CMS.Extensions
@using Mediachase.Commerce.Orders
@using TRM.Web.Constants
@using TRM.Web.Models.Layouts
@using TRM.Shared.Extensions
@using TRM.Web.Models.ViewModels
@model Hephaestus.CMS.ViewModels.IPageViewModel<TRM.Web.Models.Pages.Bullion.BullionQuickCheckoutPage, Hephaestus.CMS.ViewModels.ILayoutModel, TRM.Web.Models.ViewModels.Bullion.QuickCheckout.QuickCheckoutViewModel>
@{
    var myLayout = Model.Layout as TrmLayoutModel;
    if (myLayout == null)
    {
        throw new InvalidCastException(StringConstants.Layout.InvalidLayout);
    }
    var orderReject = Model.ViewModel.OrderRejectedMsg;
}

<div class="mod-section">
    <div class="row justify-content-center text-center">
        @if (Model.CurrentPage.ThreeContentAreas.TopContent != null)
        {
            <div class="col-12 form-spacing">
                <div class="row">
                    @Html.PropertyFor(m => m.CurrentPage.ThreeContentAreas.TopContent)
                </div>
            </div>
        }

        <div class="col-md-10 col-lg-8">
            <div class="form-container">
                <div class="form-spacing">
                    @if (Model.CurrentPage.DisplayPageHeading && Model.ViewModel.InvestmentPurchaseOrder.OrderStatus != OrderStatus.Cancelled)
                    {
                        <h1>@Html.PropertyFor(m => m.CurrentPage.Heading)</h1>
                    }


                    @if (Model.CurrentPage.ThreeContentAreas.MiddleContent != null)
                    {
                        @Html.PropertyFor(m => m.CurrentPage.ThreeContentAreas.MiddleContent)
                    }
                </div>

                <div class="row justify-content-center">
                    <div class="col-10 col-md-6">
                        <h2 class="section-head"><span>Order Summary</span></h2>
                        <div>
                            @Html.PropertyFor(x => x.CurrentPage.OrderSummaryDescription)
                        </div>
                    </div>
                    <div class="col-12"></div>
                    @if (Model.ViewModel.InvestmentPurchaseOrder.OrderStatus == OrderStatus.Cancelled)
                    {
                        <div class="col-10 col-md-6">
                            <div class="form-spacing">
                                @{Html.RenderPartial("RoyalMint2020/_Message", new MessageViewModel { Icon = "close", Text = orderReject });}
                            </div>
                        </div>
                    }
                    else
                    {
                        if (Model.ViewModel.InvestmentPurchaseOrder.OrderStatus == OrderStatus.InProgress)
                        {
                            <div class="col-10 col-md-6">
                                <div class="form-spacing">
                                    @{Html.RenderPartial("RoyalMint2020/_Message", new MessageViewModel { Icon = "alert", Body = Model.CurrentPage.PendingOrderConfirmationMessage });}
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="col-10 col-md-6">
                                <div class="form-spacing">
                                    @{Html.RenderPartial("RoyalMint2020/_Message", new MessageViewModel { Icon = "check", Body = Model.CurrentPage.SuccessfulOrderConfirmationMessage });}
                                </div>
                            </div>
                        }
                        if (Model.CurrentPage.Step2TopContentArea != null)
                        {
                            <div class="form-spacing">
                                @Html.PropertyFor(x => x.CurrentPage.Step2TopContentArea)
                            </div>
                        }
                        <div class="col-10 col-md-9">
                            <div class="form-spacing">
                                <div class="order-ref p-1 p-sm-2">
                                    @{ var investmentOrder = Model.ViewModel.InvestmentPurchaseOrder;}
                                    <div class="row">
                                        <div class="col"><strong>@Html.PropertyFor(x => x.CurrentPage.TotalOrderTitle)</strong></div>
                                        <div class="col"><p class="mb-1"><strong>@investmentOrder.Total</strong></p></div>
                                    </div>
                                    <div class="row">
                                        <div class="col">
                                            <strong>@Html.PropertyFor(x => x.CurrentPage.OrderNumberTitle)</strong>
                                        </div>
                                        <div class="col">
                                            @foreach (var orderNumber in investmentOrder.OrderNumbers)
                                            {
                                                <p class="mb-1">#@orderNumber</p>
                                            }
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col">
                                            <strong>@Html.PropertyFor(x => x.CurrentPage.OrderDateTitle)</strong>
                                        </div>
                                        <div class="col">
                                            <p class="mb-1">@Model.ViewModel.OrderDate.ToString("dd/MM/yyyy")</p>
                                        </div>
                                    </div>
                                </div>
                                @Html.Partial("RoyalMint2020/_InvestmentSummaryConfirmation", Model.ViewModel.InvestmentPurchaseOrder, new ViewDataDictionary { { "IsBullionOnly", true } })
                            </div>
                        </div>
                        <div class="order-details col-10 col-md-8 col-xl-6">
                            <div class="row justify-content-center">
                                <div class="col-12 col-sm-6">
                                    <p class="form-label">@Html.PropertyFor(x => x.CurrentPage.DeliveryToTitle)</p>
                                    @if (investmentOrder.DeliveryAddress.Name.Equals("VaultShippingAddress"))
                                    {
                                        <p>@Html.TranslateFallBack(StringResources.BullionDeliveryToVault, "Royal Mint Vault")</p>
                                    }
                                    else
                                    {
                                        Html.RenderPartial("RoyalMint2020/_Address", new AddressViewModel { Address = investmentOrder.DeliveryAddress });
                                    }
                                </div>
                                <div class="col-12 col-sm-6 mb-5">
                                    <p class="form-label">@Html.PropertyFor(x => x.CurrentPage.PaymentTitle)</p>
                                    <p>@Html.TranslateFallBack(StringResources.BullionWalletPayment, "Investment Wallet")</p>
                                </div>
                            </div>
                        </div>

                        if (Model.CurrentPage.Step2MiddleContentArea != null)
                        {
                            <div class="col-12">
                                <div class="form-spacing">
                                    @Html.PropertyFor(x => x.CurrentPage.Step2MiddleContentArea)
                                </div>
                            </div>
                        }
                        <div class="col-10 col-md-9">
                            <div class="border-top">
                                <div class="flex-align-center row pt-2">
                                    <div class="text-center col-sm-6">
                                        <a href="@Url.ContentUrlExtension(myLayout.MyAccountPage)" class="btn btn-secondary">@Html.TranslateFallback(StringResources.BullionCheckOutOpenMyAccountDashboard, "Open my Account Dashboard")</a>
                                    </div>
                                    <div class="text-center col-sm-6">
                                        <a href="@Url.ContentUrlExtension(myLayout.StartPageReference)" class="btn btn-primary">@Html.TranslateFallback(StringResources.BullionCheckOutVisitHomePage, "Visit our homepage")</a>
                                    </div>
                                </div>
                            </div>
                        </div>

                    }
                </div>
            </div>
            @if (Model.CurrentPage.ThreeContentAreas.BottomContent != null)
            {
                <div class="col-12">
                    <div class="form-spacing">
                        @Html.PropertyFor(m => m.CurrentPage.ThreeContentAreas.BottomContent)
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<!-- Fill DataLayer -->
@Html.Action("PushDataLayerBasketCart", "Shared", new { step = Step.Six })