@model Hephaestus.CMS.ViewModels.IPageViewModel<TRM.Web.Models.Pages.SearchPage, Hephaestus.CMS.ViewModels.ILayoutModel, TRM.Web.Models.ViewModels.GetContentListingViewModel>
@using TRM.Web.Constants
@using TRM.Web.Models.Layouts
@using EPiServer.Web
@using System.Web.Optimization

@{
    var layout = Model.Layout as TrmLayoutModel;
    if (layout == null)
    {
        throw new InvalidCastException(StringConstants.Layout.InvalidLayout);
    }

    var searchPageUrl = Request.Url.AbsolutePath;
    var viewModel = Model.ViewModel;
}

@section PageStyles
{
    @Styles.Render("~/bundles/" + SiteDefinition.Current.Name + "searchCss")
}

<script type="text/javascript">
    function searchKeyPress(e) {
        e = e || window.event;
        if (e.keyCode === 13) {
            document.getElementById("doMainSearch").click();
            return false;
        }
        return true;
    }

    function doSearch() {
        if (document.getElementById("refine").value.length > 1) {
            var redirectUrl = "@(searchPageUrl)?q="
                + document.getElementById("refine").value
                + "&type=@viewModel.SearchListingType";
            window.location = redirectUrl;
            return false;
        }
        else {
            return false;
        }
    }

    var currentResultPage = 1;
    var currentHelpPage = 1;
    var getMoreTextsUrl = '@Url.Action("GetContentListingData", "SearchPage")';

    function loadMoreTexts(query, type, totalPagesCount) {
        currentResultPage = currentResultPage + 1;
        var data = {
            query: query,
            type: type,
            currentResultPage: currentResultPage
        };

        $('.js-loader-content').show();

        $.post(getMoreTextsUrl, data, function(response) {
            $("#textsView").append(response.gridView);         
        }).always(function() {
                $('.js-loader-content').hide();
            });

        if (currentResultPage >= totalPagesCount) {
            $("#loadMoreButton").hide();
        }

        return false;
    }
</script>

<div class="pageContainer">
    @if (!layout.HideSiteBreadcrumb)
    {
        Html.RenderPartial("RoyalMint2020/_Breadcrumb", layout.Breadcrumb);
    }

    @if (layout.HasMessage)
    {
        Html.RenderPartial("_MessageBox", layout.Message);
    }
</div>

<div class="container">
    <div class="mod-section row justify-content-center">
        <div class="col col-md-10 col-lg-8 justify-content-center">
            <form action="./" method="post" class="mod-form  site-search-refine">
                <fieldset>
                    <legend class="sr-only">Refine search results</legend>

                    <div class="row justify-content-center text-center">
                        <div class="col-11 col-md-10 col-lg-10 col-xl-8">
                            <h1>Showing @viewModel.TotalCount results for</h1>
                            @if (viewModel.TotalCount <= 0)
                            {
                                <h6>@Html.TranslateFallback(StringResources.NoResultMatch, StringConstants.TranslationFallback.NoResultMatch) <br /> <strong class="display-3">"@viewModel.Query"</strong></h6>
                                <p>@Html.TranslateFallback(StringResources.RefineYourSearch, StringConstants.TranslationFallback.RefineYourSearch)</p>
                            }
                            <div class="form-group">
                                <label for="refine" class="sr-only">Search</label>
                                <div class="input-group">
                                    <input type="text" class="form-control" id="refine" value="@viewModel.Query" required onkeypress="return searchKeyPress(event);">
                                    <div class="input-group-append">
                                        <button id="doMainSearch" class="btn btn-white" type="button" onclick="doSearch();">
                                            <span class="sr-only">Search</span>
                                            <span class="icon">
                                                <svg>
                                                    <use xlink:href="#search"></use>
                                                </svg>
                                            </span>
                                        </button>
                                    </div>
                                </div>
                            </div><!-- /.form-group -->
                        </div>
                    </div><!-- /.site-search -->

                </fieldset>
            </form>
        </div>
    </div>
    @if (viewModel.TotalCount > 0)
    {
        <div class="mod-section articles">
            <h2 class="section-head"><span>@viewModel.SearchListingType.ToString() (@viewModel.TotalCount)</span></h2>

            <div class="row justify-content-center">
                <div class="col-10 col-lg-8">
                    <div id="textsView">
                        @foreach (var text in viewModel.TextWithBreadcrumbItems)
                        {
                            Html.RenderPartial("RoyalMint2020/_SearchContentResult", text);
                        }
                    </div>

                    @if (viewModel.TotalPagesCount > 1)
                    {
                        <div class="js-mod-loader js-loader-content" style="height:6.25rem; display:none">
                            <div class="js-loader loading small" style="background-color:inherit"></div>
                        </div>
                        <button id="loadMoreButton" class="btn btn-secondary" onclick="loadMoreTexts('@viewModel.Query', '@viewModel.SearchListingType', @viewModel.TotalPagesCount);">Load more</button>
                    }
                </div>
            </div>
        </div>
    }
</div>
