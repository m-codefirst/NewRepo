@using EPiServer.Editor
@using EPiServer.Web.Mvc.Html
@using TRM.Web.Constants
@using TRM.Web.Models.Layouts
@using EPiServer.ServiceLocation
@using TRM.Web.Extentions
@using TRM.Web.Helpers;
@using TRM.Shared.Extensions
@using Newtonsoft.Json
@model Hephaestus.CMS.ViewModels.IPageViewModel<TRM.Web.Models.Pages.Bullion.BullionExistingAccountLandingPage, Hephaestus.CMS.ViewModels.ILayoutModel, TRM.Web.Models.ViewModels.Bullion.BullionExistingAccountLandingPageViewModel>
@{
    var myLayout = Model.Layout as TrmLayoutModel;
    if (myLayout == null)
    {
        throw new InvalidCastException(StringConstants.Layout.InvalidLayout);
    }

    @Html.FullRefreshPropertiesMetaData(new[] { "ThreeContentAreas" })
    var recaptchaHelper = ServiceLocator.Current.GetInstance<IGoogleRecaptchaHelper>();

    var viewModel = new
    {
        isAuthenticated = Request.IsAuthenticated,
        options = new
        {
            label = @Html.TranslateFallback(TRM.Web.Constants.StringResources.SignIn,"Sign in"),

            small = @Html.TranslateFallback(TRM.Web.Constants.StringResources.CheckoutFasterWithSavedDetails, "Checkout faster with saved details"),
            login = new
            {
                emailLabel = @Html.TranslateFallback(TRM.Web.Constants.StringResources.EmailAddressOrUsernamePlaceholder, "Email address or Username"),
                passwordLabel = Html.TranslateFallback(TRM.Web.Constants.StringResources.LoginFormPasswordLabel, "Password"),
                forgottenPasswordText = Html.TranslateFallback(TRM.Web.Constants.StringResources.LoginFormForgottenPasswordLabel, "Forgotten Password"),
                buttonText = Model.CurrentPage.LoginAndContinueButtonText,
                loginErrorMessage = Model.ViewModel.LoginFailedMessage
            },
            twoStepLogin = new
            {
                questionLabel = Html.TranslateFallback(TRM.Web.Constants.StringResources.LoginTwoStepAuthenticationQuestionHeader, "Security question"),   
                buttonText =  Html.TranslateFallback(TRM.Web.Constants.StringResources.SubmitButtonText, "Submit"),
            },
            forgottenPassword = new
            {
                heading = Html.TranslateFallback(TRM.Web.Constants.StringResources.ForgottenYourPassword, "Forgotten Password?"),
                description = Html.TranslateFallback(TRM.Web.Constants.StringResources.ForgottenYourPasswordSubHeading, "Please enter your email address below and we will email you a password reset link."),
                label = Html.TranslateFallback(TRM.Web.Constants.StringResources.EmailAddress, "Email address or username"),
                placeholder = Html.TranslateFallback(TRM.Web.Constants.StringResources.EmailAddressPlaceholder, "Please enter your email"),
                cancel = Html.TranslateFallback(StringResources.GoToLogin, "Return to Sign In"),
                buttonText = Html.TranslateFallback(StringResources.ResetPassword, "Reset Password"),
                isRecaptchaEnabled = recaptchaHelper.IsEnabled(),
                recaptchaSiteKey = recaptchaHelper.SiteKey  // in order to test in Localhost env. set recaptchaSiteKey = '6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI'  and in GoogleRecaptchaHelper.cs set  var privateKey = "6LeIxAcTAAAAAGG-vFI1TnRWxMZNFuojJ4WifJWe";
            },
            passwordConfirmation = new
            {
                heading = Html.TranslateFallback(StringResources.ForgottenPasswordConfirmationHeading, "Password reset sent"),
                description = Html.TranslateFallback(StringResources.ForgottenPasswordConfirmationSubHeading, "You will receive an email shortly with instructions on how to reset your password."),
                goToLogin = Html.TranslateFallback(StringResources.GoToLogin, "Go to login")

            },
            guestCheckout = new
            {
                url = Url.ContentUrlExtension(Model.GetBullionRegistrationPage()),
                heading = Html.TranslateFallback(StringResources.NewToRoyalMintBullion, "New to Royal Mint"),
                label = Html.TranslateFallback(StringResources.CreateYourAccountBullion, "Create your acccount"),
                emailLabel = Html.TranslateFallback(TRM.Web.Constants.StringResources.EmailAddress, "Email Address"),
                emailSmall =  Html.TranslateFallback(TRM.Web.Constants.StringResources.ForReceiptsAndOrderInformationOnly, "For receipts and order information only"),
                emailPlaceholder = Html.TranslateFallback(TRM.Web.Constants.StringResources.EmailAddressPlaceholderInBullionRegistration, "Enter your email"),
                submit = Model.CurrentPage.CreateAnAccountButtonText,
                submitIsAuthenticated = Html.TranslateFallback(TRM.Web.Constants.StringResources.GoToYourAccountPage, "Go to your Account page"),
                
                
            }
        }
    };
}

<div class="mod-section">
    <div class="contentArea">
        <div class="row" @Html.EditAttributes(m => m.CurrentPage.ThreeContentAreas)>
            @Html.DisplayFor(m => m.CurrentPage.ThreeContentAreas.TopContent)
        </div>
    </div>

    <div class="row justify-content-center text-center">
        <div class="col-md-10 col-lg-8">
            <div class="form-container">
                <div class="row justify-content-center">
                    <div class="col-10 col-md-9">
                        @if (Model.CurrentPage.DisplayPageHeading)
                        {
                            <h1>@Html.DisplayFor(x => x.CurrentPage.Heading)</h1>
                        }
                    </div>
                </div>
                <div class="contentArea">
                    <div @Html.EditAttributes(m => m.CurrentPage.ThreeContentAreas)>
                        @Html.DisplayFor(m => m.CurrentPage.ThreeContentAreas.MiddleContent)
                    </div>
                </div>
                <div class="row justify-content-center">

                    @if (!string.IsNullOrEmpty(Model.CurrentPage.SubHeading) && Request.HttpMethod == "POST" || Model.CurrentPage.MainBody != null)
                    {
                        <div class="col-10 col-md-6">
                            <div class="form-spacing">
                                @if (Request.HttpMethod == "POST" || true)
                                {
                                    <p class="mb-5">
                                        @Html.DisplayFor(x => Model.CurrentPage.SubHeading)
                                    </p>
                                }
                                @Html.DisplayFor(x => Model.CurrentPage.MainBody)
                            </div>
                        </div>
                    }

                    <div class="col-10 col-md-9">
                        <div class="form-spacing">
                            <div data-module="bullion-login-registration" data-settings="@JsonConvert.SerializeObject(viewModel)"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>


    <div class="contentArea">
        <div class="row" @Html.EditAttributes(m => m.CurrentPage.ThreeContentAreas)>
            @Html.DisplayFor(m => m.CurrentPage.ThreeContentAreas.BottomContent)
        </div>
    </div>

</div>


