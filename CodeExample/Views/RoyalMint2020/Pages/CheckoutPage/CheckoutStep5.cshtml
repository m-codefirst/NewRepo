@using EPiServer.Find.Helpers.Text
@using EPiServer.Shell.Web
@using EPiServer.Web.Mvc.Html
@using Hephaestus.Commerce.Shared.Models
@using TRM.Web.Constants
@using TRM.Web.Models.Layouts

@using Newtonsoft.Json
@using TRM.Web.Models.ViewModels
@model Hephaestus.CMS.ViewModels.IPageViewModel<TRM.Web.Models.Pages.CheckoutPage, Hephaestus.CMS.ViewModels.ILayoutModel, TRM.Web.Models.ViewModels.Checkout.CheckoutStep5ViewModel>
@{
    var myLayout = Model.Layout as TrmLayoutModel;
    if (myLayout == null)
    {
        throw new InvalidCastException(StringConstants.Layout.InvalidLayout);
    }
    var thisFeedbackClass = string.Empty;
    var isLoggedIn = Request.IsAuthenticated;

    var progressBarViewModel = new ProgressBarViewModel
    {
        Steps = isLoggedIn
            ? new List<ProgressBarItem> {
                new ProgressBarItem {
                    Heading = Model.CurrentPage.Step1Heading,
                    Number = Model.CurrentPage.Step1Number,
                    IsComplete = true
                },
                new ProgressBarItem {
                    Heading = Model.CurrentPage.Step3Heading,
                    Number = Model.CurrentPage.Step3Number,
                    IsComplete = true
                },
                new ProgressBarItem {
                    Heading = Model.CurrentPage.Step4Heading,
                    Number = Model.CurrentPage.Step4Number,
                    IsComplete = true

                },
                new ProgressBarItem {
                    Heading = Model.CurrentPage.Step5Heading,
                    Number = Model.CurrentPage.Step5Number,
                    IsCurrent = true
                }

                                                                                            }
            : new List<ProgressBarItem> {
                new ProgressBarItem {
                    Heading = Model.CurrentPage.Step1Heading,
                    Number = Model.CurrentPage.Step1Number,
                    IsComplete = true
                },
                new ProgressBarItem {
                    Heading = Model.CurrentPage.Step2Heading,
                    Number = Model.CurrentPage.Step2Number,
                    IsComplete = true
                },
                new ProgressBarItem {
                    Heading = Model.CurrentPage.Step3Heading,
                    Number = Model.CurrentPage.Step3Number,
                    IsComplete = true
                },
                new ProgressBarItem {
                    Heading = Model.CurrentPage.Step4Heading,
                    Number = Model.CurrentPage.Step4Number,

                    IsComplete = true
                },
                new ProgressBarItem {
                    Heading = Model.CurrentPage.Step5Heading,
                    Number = Model.CurrentPage.Step5Number,
                    IsCurrent = true
                }
                                                                                        }
    };

    var passwordViewModel = new
    {
        password = new
        {
            hasStrength = true,
            hasErrors = FieldHasErrors("viewModel.Password1"),
            id = "registerUsrPW1-main",
            label = Model.CurrentPage.Step2PasswordLabel,
            errorMessage = ErrorMessage("viewModel.Password1"),
            requiredError = Html.TranslateFallback(StringResources.PasswordRequired, "Password is required"),
            passwordMin = 8,
            passwordMinLength = Html.TranslateFallback(StringResources.PasswordMinLength, "Password too weak"),
            passwordMax = 256,
            passwordMaxLength = string.Format(Html.TranslateFallback(StringResources.PasswordMaxLength, "Password cannot be longer than {0} characters"), 256),
            passwordInvalid = Html.TranslateFallback(StringResources.PasswordInvalid, StringConstants.TranslationFallback.PasswordInvalid),
            passwordMatch = Html.TranslateFallback(StringResources.PasswordMatch, StringConstants.TranslationFallback.PasswordMatch),
        },

        passwordConfirmation = new
        {
            hasStrength = false,
            hasErrors = FieldHasErrors("viewModel.Password2"),
            id = "registerPassword2",
            label = Model.CurrentPage.Step2PasswordLabel,
            errorMessage = ErrorMessage("viewModel.Password2")
        },

        createAccount = Model.CurrentPage.Step5CreateAccountLabel,
        actionUrl = Url.Action("CreateAccount"),
        contactId = Model.ViewModel.ContactId
    };
}

@functions
{
    public bool FieldHasErrors(string fieldName)
    {
        return (ViewData.ModelState[fieldName] != null && ViewData.ModelState[fieldName].Errors.Any());
    }


    public string ErrorMessage(string fieldName)
    {
        var fieldKey = string.Format("{0}", fieldName);
        if (ViewData.ModelState[fieldKey] != null && ViewData.ModelState[fieldKey].Errors.Any())
        {
            return @Html.ValidationMessage(fieldKey).ToString();

        }
        else
        {
            return "";

        }

    }
}


<div class="mod-section">
    @{ Html.RenderPartial("RoyalMint2020/_ProgressBar", progressBarViewModel); }
    <div class="row justify-content-center">
        <div class="col-md-10 col-lg-8">
            <div class="form-container">
                <div class="row justify-content-center mb-2 d-none d-print-flex">
                    <img style="height:150px" class="img-responsive" src="Static/img/global/RM_Logo_Full_Landscape_Purple.jpg">
                </div>
                @if (Model.CurrentPage.DisplayPageHeading)
                {
                    <h1 class="d-print-none">@Html.PropertyFor(m => m.CurrentPage.Heading)</h1>

                }

                <div class="row justify-content-center d-print-block">
                    <div class="col-10 col-md-6 d-print-none">
                        <div class="form-spacing">

                            @Html.DisplayFor(m => m.CurrentPage.Step5SuccessMessage)

                        </div>

                        @if (Model.CurrentPage.Step5TopContentArea != null)
                        {
                            <div class="form-spacing">
                                <div class="col-xs-12">
                                    <div class="row mb-2x">
                                        @Html.DisplayFor(m => m.CurrentPage.Step5TopContentArea)
                                    </div>
                                </div>
                            </div>
                        }

                        @if (!Request.IsAuthenticated)
                        {
                            <div class="form-spacing d-print-none">
                                <h2 class="section-head"><span>What happens next?</span></h2>
                                <div class="guest-checkout p-1 p-sm-2">
                                    <div>@Html.PropertyFor(m => m.CurrentPage.Step5PasswordFormDescriptione)</div>
                                    <div class="password-strength">
                                        <div data-module="save-password" data-settings="@JsonConvert.SerializeObject(passwordViewModel)"></div>
                                    </div>
                                </div> <!--/.guest-checkout -->
                            </div>
                        }

                    </div> <!-- /.col-md-6 -->
                    <div class="col-10 col-md-9 col-12-print">
                        <div class="form-spacing">
                            <h2 class="section-head text-left-print"><span>@Html.TranslateFallback(StringResources.BasketSummary, StringConstants.TranslationFallback.BasketSummary)</span></h2>

                            <div class="order-ref p-1 p-sm-2 border-bottom-print padding-left-none-print page-break-print">
                                <div class="col-8-print">
                                    <div class="row">
                                        <div class="col">
                                            <strong class="font-weight-normal-print">@Html.DisplayFor(m => m.CurrentPage.Step5OrderNumberLabel)</strong>
                                        </div>
                                        <div class="col">
                                            @foreach (var orderNo in Model.ViewModel.PurchaseOrder.OrderNumbers)
                                            {
                                                <p class="mb-1">@orderNo</p>
                                            }
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col">
                                            <strong class="font-weight-normal-print">@Html.DisplayFor(m => m.CurrentPage.Step5DateLabel)</strong>

                                        </div>
                                        <div class="col">
                                            <p class="mb-1">@(Model.ViewModel.PurchaseOrder.Modified.Value.Date.ToShortDateString())</p>
                                        </div>
                                    </div>

                                    @if (Model.ViewModel.PurchaseOrder.OrderNumbers.Count > 1)
                                    {
                                        <p class="mb-1">
                                            @Html.DisplayFor(m => m.CurrentPage.Step5SplitOrderMessage)
                                        </p>
                                    }

                                    <div class="row">
                                        <div class="col">
                                            <strong class="font-weight-normal-print">@Html.DisplayFor(m => m.CurrentPage.Step5StatusLabel)</strong>
                                        </div>
                                        <div class="col">
                                            <p class="mb-0">@Model.ViewModel.PurchaseOrder.Status</p>
                                        </div>
                                    </div>
                                </div>

                            </div>

                            @Html.Partial("RoyalMint2020/_BasketSummaryConfirmation")
                        </div>
                    </div> <!--.order-summary -->
                    <div class="order-details col-10 col-md-8 col-xl-6 col-12-print page-break-print">
                        <div class="row justify-content-center">
                            <div class="col-12 col-sm-6">
                                <p class="form-label font-weight-bold-print">@Html.DisplayFor(m => m.CurrentPage.Step5DeliveryLabel)</p>
                                @{
                                    var deliveryAddress = new AddressModel();
                                    var shipment = Model.ViewModel.PurchaseOrder.Shipments.FirstOrDefault();

                                    if (shipment != null)
                                    {
                                        deliveryAddress = shipment.Address;
                                    }
                                }
                                @{ Html.RenderPartial("RoyalMint2020/_Address", new AddressViewModel
                                    {
                                        Address = deliveryAddress,
                                        Name = Model.ViewModel.PurchaseOrder.OrderDeliveryName
                                    });
                                }
                            </div>
                            <div class="col-12 col-sm-6">
                                <p class="form-label font-weight-bold-print ">@Html.DisplayFor(m => m.CurrentPage.Step5BillingLabel)</p>
                                @{
                                    var billingAddress = new AddressModel();
                                    var firstPayment = Model.ViewModel.PurchaseOrder.Payments.FirstOrDefault();

                                    if (firstPayment != null)
                                    {
                                        billingAddress = firstPayment.Address;
                                    }
                                }
                                @if (billingAddress != null)
                                {
                                    Html.RenderPartial("RoyalMint2020/_Address", new AddressViewModel
                                    {
                                        Address = billingAddress,
                                        Name = String.Format("{0} {1}", billingAddress.FirstName, billingAddress.LastName)
                                    });

                                }
                            </div>
                            <div class="col-12">
                                <p class="form-label font-weight-bold-print">@Html.DisplayFor(m => m.CurrentPage.Step5PaymentLabel)</p>
                                <ul class="payment-details list-unstyled">
                                    @foreach (var payment in Model.ViewModel.PurchaseOrder.Payments)
                                    {
                                        <li>
                                            @if (payment.MethodName == TRM.Shared.Constants.StringConstants.Payments.Mastercard && !string.IsNullOrEmpty(payment.CardType))
                                            {
                                                <div>
                                                    <span class="d-inline mr-1">@Model.CurrentPage.Step5CardTypeLabel</span>  @payment.CardType &nbsp;
                                                </div>
                                                <div>
                                                    <span class="d-inline mr-1">@Model.CurrentPage.Step5LastFourDigitsLabel</span> @payment.Last4Digits
                                                </div>

                                            }
                                            else
                                            {
                                                <span class="d-inline">@payment.MethodName</span>
                                            }
                                        </li>
                                    }
                                </ul>
                            </div>
                        </div>
                        <div class="row btns d-print-none">
                            <div class="col-12 col-md-5">
                                <button class="btn btn-secondary" type="button" onclick="window.print()">Print</button>
                            </div>
                            <div class="col-12 col-md-7">
                                <a href="/" class="btn btn-primary">Continue shopping</a>
                            </div>
                        </div>
                        <div @Html.EditAttributes(m => m.CurrentPage.CheckoutFooterContentArea)>
                            <div class="row">
                                @Html.DisplayFor(m => m.CurrentPage.Step5BottomContentArea)
                            </div>
                        </div>
                    </div> <!-- /.order-details -->

                </div>

            </div> <!-- /.form-container -->
        </div>
    </div>
</div>

<!-- Fill DataLayer -->
@Html.Action("PushDataLayerBasketCart", "Shared", new { step = Step.Six })
@section HeaderScripts{
    <script type="text/javascript">
        if (top.location !== self.location) {
            var contactIdParam = '@Html.Raw(Model.ViewModel.ContactId.IsNullOrEmpty() ? "" : $"&c={Model.ViewModel.ContactId}")';
            parent.location = self.location + contactIdParam;
        }
    </script>
};
