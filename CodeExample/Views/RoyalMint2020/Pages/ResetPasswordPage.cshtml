@using Newtonsoft.Json
@using TRM.Web.Constants
@model Hephaestus.CMS.ViewModels.IPageViewModel<TRM.Web.Models.Pages.ResetPasswordPage, Hephaestus.CMS.ViewModels.ILayoutModel, TRM.Web.Models.ViewModels.ResetPasswordViewModel>

<div class="mod-section pt-0">
    <div class="row justify-content-center">
        <!-- WYSIWYG -->
        <div class="wysiwyg col-md-9">
            @Html.PropertyFor(a => a.CurrentPage.Introtext)
        </div>
        <!-- WYSIWYG End -->
    </div>
</div>
@{
    var viewModel = new
    {
        values = new
        {
            antiForgeryToken = @Html.AntiForgeryToken().ToString(),
            token = Model.ViewModel.Token,
            userName = Model.ViewModel.UserName,
        },
        content = new
        {
            passwordLabel = @Html.PropertyFor(a => a.CurrentPage.EnterPasswordPlaceholder).ToHtmlString(),
            confirmLabel = @Html.PropertyFor(a => a.CurrentPage.ConfirmPasswordPlaceholder).ToHtmlString(),
            resetButtonText = @Html.PropertyFor(a => a.CurrentPage.ResetButtonText).ToHtmlString(),
            passwordRequiredError = Html.TranslateFallback(StringResources.RequiredPassword, "Password is required"),
            passwordLengthError = Html.TranslateFallback(StringResources.PasswordMaxLength, "Password cannot be longer than 256 characters"),
            confirmRequiredError = Html.TranslateFallback(StringResources.ConfirmPasswordMaxLength, "Confirm is required"),
            confirmLengthError = Html.TranslateFallback(StringResources.ConfirmPasswordMaxLength, "Confirm cannot be longer than 256 characters"),
            passwordMatchError = Html.TranslateFallback(StringResources.PasswordMatch, "The password provided do not match"),
            passwordInvalid = Html.TranslateFallback(StringResources.PasswordInvalid, StringConstants.TranslationFallback.PasswordInvalid),
            actionUrl = Url.Action("Index")
        }
    };
}

<div class="row justify-content-center text-center">
    <div class="col-md-10 col-lg-8">
        <div class="form-container mb-5">
                <div class="row justify-content-center">
                    <div class="col-12">
                        <h1>@Html.PropertyFor(a => a.CurrentPage.PageHeading)</h1>
                    </div>
                    <div class="col-10 col-sm-8 col-md-7 col-lg-6">
                        <div data-module="reset-password" data-settings="@JsonConvert.SerializeObject(viewModel)"></div>
                        @if (!string.IsNullOrEmpty(Model.ViewModel.PasswordResetSuccessMsg))
                        {
                            <div class="wysiwyg row justify-content-center">
                                <p class="valid-feedback d-block text-center">
                                    @Html.Raw(Model.ViewModel.PasswordResetSuccessMsg)
                                </p>
                            </div>
                        }
                        @if (Model.ViewModel.PasswordIsNotReset != null && Model.ViewModel.PasswordIsNotReset == true)
                        {
                            <div class="wysiwyg row justify-content-center">
                                @Html.PropertyFor(a => a.CurrentPage.PasswordResetFailureMessage)
                            </div>
                        }
                    </div>
                </div>
            
        </div>
    </div>
</div>
