@using Newtonsoft.Json
@model TRM.Web.Models.ViewModels.MyAccountStatementHistoryViewModel

@{
    var viewModel = new
    {
        statementDatesLabel = Html.TranslateFallback(TRM.Web.Constants.StringResources.ViewStatementHistory, "View Statement History"),
        statementDatesSelectLabel = Html.TranslateFallback(TRM.Web.Constants.StringResources.SelectDate, "Select Date"),
        statementDates = new SortedDictionary<string,string>(
            Model.Statements.ToDictionary(k => k.Id, v => v.StatementDate.ToString("dd MMM yyyy"))),
        getStatementButton = Html.TranslateFallback(TRM.Web.Constants.StringResources.View, "View"),
        orderedByText = Html.TranslateFallback(TRM.Web.Constants.StringResources.MostRecentFirst, "(most recent first)"),
        statementDateText = Html.TranslateFallback(TRM.Web.Constants.StringResources.StatementDate, "Statement Date"),
        customerCodeText = Html.TranslateFallback(TRM.Web.Constants.StringResources.CustomerCode, "Customer Code"),
        creditLimitText = Html.TranslateFallback(TRM.Web.Constants.StringResources.CreditLimit, "Credit Limit"),
        nameAddressText = Html.TranslateFallback(TRM.Web.Constants.StringResources.NameAndAddress, "Name & Address"),
        broughtBalanaceText = Html.TranslateFallback(TRM.Web.Constants.StringResources.BalanceBroughtForward, "Balance brought forward (from last statement)"),
        dateColumn = Html.TranslateFallback(TRM.Web.Constants.StringResources.Date, "Date"),
        invoiceNoColumn = Html.TranslateFallback(TRM.Web.Constants.StringResources.InvoiceNumber, "Invoice No"),
        quantityColumn = Html.TranslateFallback(TRM.Web.Constants.StringResources.Qty, "Qty"),
        descriptionColumn = Html.TranslateFallback(TRM.Web.Constants.StringResources.Description, "Description"),
        amountColumn = Html.TranslateFallback(TRM.Web.Constants.StringResources.Amount, "Amount"),
        postPackColumn = Html.TranslateFallback(TRM.Web.Constants.StringResources.PandP, "P & P"),
        creditsColumn = Html.TranslateFallback(TRM.Web.Constants.StringResources.Credits, "Credits"),
        easePaymentText = string.Format(Html.TranslateFallback(TRM.Web.Constants.StringResources.ForEaseOfPayment, "For ease of payment please call our payment line on {0}"), Model.ThisBlock.PaymentLineNumber),
        payReceivedAfterFormat = Html.TranslateFallback(TRM.Web.Constants.StringResources.PaymentsRecievedAfter, "Any payments received or items returned after {0} not shown above, will appear on your next statement."),
        newBalanceColumn = Html.TranslateFallback(TRM.Web.Constants.StringResources.NewBalance, "New Balance"),
        minPaymentColumn = Html.TranslateFallback(TRM.Web.Constants.StringResources.MinimumPayment, "Minimum Payment"),
        paymentDueColumn = Html.TranslateFallback(TRM.Web.Constants.StringResources.PaymentDueDate, "Payment Due Date"),
    };
}

<div class="mod-section">
    <h2 class="section-head"><span>@Html.PropertyFor(model => model.ThisBlock.Heading)</span></h2>

    @Html.DisplayFor(a => a.ThisBlock.IntroductionText)

    @if (Model.Statements.Count > 0)
    {
        <div data-module="statement-history" data-settings="@JsonConvert.SerializeObject(viewModel)"></div>
    }
    else
    {
        <div id="bullion-statement-history" class="bg-white p-1 p-md-2">
            @Html.PropertyFor(x => x.ThisBlock.NoStatementsMessage)
        </div>
    }
</div>
